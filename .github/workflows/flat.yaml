name: Flat

on:
  push:
    paths:
      - .github/workflows/flat.yml # Only run a new workflow every time this file (flat.yaml) file changes
  workflow_dispatch: # Required even though this is currently empty
  schedule:
    - cron: "*/30 * * * *" # Run this workflow every 5 minutes

jobs:
  daily:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v2
      - name: Fetch daily album
        run: |
          curl "https://lightroom.adobe.com/v2/spaces/${{ secrets.LIGHTROOM_SPACE_ID }}/albums/${{ secrets.LIGHTROOM_ALBUM_ID }}/assets?embed=asset%3Buser&order_after=-&exclude=incomplete&subtype=image%3Bvideo%3Blayout_segment&limit=1000" | sed 's/while (1) {}//' | jq -r '.resources[]' > data/daily.json
      - name: Commit files
        id: commit
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "github-actions"
          git add -A data/daily.json
          git commit -m "Sync the daily album"
          echo "::set-output name=push::true"
        shell: bash
      - name: Push changes
        if: steps.commit.outputs.push == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
  scheduled:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v2
      - name: Setup deno
        uses: denoland/setup-deno@main
        with:
          deno-version: v1.x
      - name: Get API token
        id: get-api-token
        run: |
          token=$(curl 'https://www.italictype.com/api/auth/jwt/create/' \
          -X POST \
          -H 'accept: application/json, text/plain, */*' \
          -H 'content-type: application/json;charset=UTF-8' \
          --data-raw '{"username":"yannick","password":"${{ secrets.ITALICTYPE_PASSWORD }}"}' | jq -r .access)
          echo "::set-output name=italictype_token::${token}"
      - name: Fetch ItalicType data
        uses: githubocto/flat@v3
        with:
          http_url: "https://www.italictype.com/api/bookqueueitems/?queue=2&limit=2000"
          downloaded_filename: data/italictype.json
          authorization: "Bearer ${{ steps.get-api-token.outputs.italictype_token }}"
          postprocess: flat/italictype.ts

      - name: Fetch ButtonDown newsletters
        uses: githubocto/flat@v3
        with:
          http_url: "https://api.buttondown.email/v1/emails"
          downloaded_filename: data/newsletter.json
          authorization: "Token ${{ secrets.BUTTONDOWN_API_KEY }}"
          postprocess: flat/buttondown.ts
